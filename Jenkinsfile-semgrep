pipeline {
    agent any

    triggers {
        githubPush()
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/franpar410/app-ventas.git'
            }
        }

    stage('Setup Python Environment') {
        agent any
        steps {
            sh '''
                docker run --rm -v $PWD:/src -w /src python:3.11 bash -c "
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r requirements.txt || echo 'No requirements.txt'
                "
            '''
        }
    }


        stage('Build') {
            steps {
                echo 'Este es un build de prueba'
                sh 'echo "Hola desde Jenkins!"'
            }
        }

        /* ------------------------------ */
        /* üîç Nuevo Stage: SEMGREP en Docker */
        /* ------------------------------ */
        stage('Static Code Analysis (Semgrep)') {
            agent {
                docker {
                    image 'returntocorp/semgrep:latest'   // Imagen oficial de Semgrep
                    args '-v $WORKSPACE:/src'             // Monta el workspace de Jenkins en /src
                }
            }

            script {
                echo 'üì¶ Ejecutando an√°lisis est√°tico con Semgrep dentro de contenedor Docker...'
                
                // Crear carpeta de reportes en el workspace
                sh '''
                    mkdir -p $WORKSPACE/reports
                    docker run --rm -v $WORKSPACE:/src -w /src returntocorp/semgrep:latest \
                        semgrep --config auto --json --output reports/semgrep-report.json || true
                    docker run --rm -v $WORKSPACE:/src -w /src returntocorp/semgrep:latest \
                        semgrep --config auto --sarif --output reports/semgrep-report.sarif || true
                '''
            }


            post {
                always {
                    echo 'üìÑ Archivando reportes de Semgrep...'
                    archiveArtifacts artifacts: 'reports/*.json, reports/*.sarif', fingerprint: true
                }
                failure {
                    echo '‚ùå Semgrep encontr√≥ vulnerabilidades cr√≠ticas.'
                }
            }
        }

        stage('Push to Registry (optional)') {
            when {
                expression { return false }
            }
            steps {
                sh 'echo "Pushing to Docker Registry..."'
            }
        }

        stage('Deploy') {
            steps {
                sh 'echo "Deploying to environment..."'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finalizado.'
        }
    }
}
